"'Meeting Screen' As screen.'tabletLayout_Calendar_ver3.0'":
    OnVisible: =

    RectMeetingBkg1 As rectangle:
        Height: =42
        Visible: =_calendarVisible
        Width: =Parent.Width - Self.X
        X: =422
        Y: =RectQuickActionBar1.Height
        ZIndex: =1

    RectQuickActionBar1 As rectangle:
        Height: =64
        Width: =Parent.Width
        ZIndex: =2

    LblAppName1 As label:
        Height: =64
        PaddingLeft: =0
        Text: ="My Bookings"
        Width: =Parent.Width - Self.X * 2
        Wrap: =false
        X: =32
        ZIndex: =3

    LblResetToday1 As label:
        Align: =Align.Center
        Color: =iconCalendar1.Color
        FontWeight: =FontWeight.Bold
        Height: =iconCalendar1.Height
        PaddingTop: =12
        Size: =11
        Text: =DateDiff(Date(Year(Today()), Month(Today()), 1), Today(), TimeUnit.Days) + 1
        Width: =iconCalendar1.Width
        X: =iconCalendar1.X
        Y: =iconCalendar1.Y
        ZIndex: =4

    iconCalendar1 As icon.CalendarBlank:
        Height: =40
        Icon: =Icon.CalendarBlank
        OnSelect: |-
            =/*resets calendar view and date selection to today*/
            Set(_dateSelected, Today());
            Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))
        TabIndex: =0
        Tooltip: ="Reset selected date to today"
        Width: =40
        X: =395 - Self.Width
        Y: =dropdownCalendarSelection1.Y
        ZIndex: =5

    dropdownCalendarSelection1 As dropdown:
        Default: =_myCalendar.DisplayName
        Items: =Office365Outlook.CalendarGetTables().value
        OnChange: =Select(dropdownCalendarSelection1)
        OnSelect: |-
            =/*retrieves calendar events for all days in current month view and selected calendar 
            _minDate and _maxDate act as markers to prevent duplicate data collection*/         
            If(IsBlank(_userDomain),         
            	UpdateContext({_showLoading: true});         
            	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
            	Set(_dateSelected, Today());         
            	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
            	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))         
            );         
            Set(_calendarVisible, false);         
            UpdateContext({_showLoading: true});         
            Set(_myCalendar, Self.Selected);         
            Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days), 40, TimeUnit.Days));         
            ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value);         
            UpdateContext({_showLoading: false});         
            Set(_calendarVisible, true)
        Tooltip: ="Select a calendar"
        Width: =307
        X: =32
        Y: =RectQuickActionBar1.Height + 24
        ZIndex: =6

    LblMonthSelected1 As label:
        Align: =Align.Center
        Height: =50
        Size: =18
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =419
        Wrap: =false
        Y: =dropdownCalendarSelection1.Y + dropdownCalendarSelection1.Height + 40
        ZIndex: =7

    iconPrevMonth1 As icon.ChevronLeft:
        Height: =50
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =/*changes month view to previous month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
            If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_lastDayOfMonth, DateTimeFormat.UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="View previous month"
        Visible: =_calendarVisible
        Width: =59
        Y: =LblMonthSelected1.Y
        ZIndex: =8

    iconNextMonth1 As icon.ChevronRight:
        Height: =50
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="View next month"
        Visible: =_calendarVisible
        Width: =59
        X: =419 - Self.Width
        Y: =LblMonthSelected1.Y
        ZIndex: =9

    WeekdayGallery1 As gallery.WeekdayGallery:
        AccessibleLabel: ="Days of the week"
        Height: =45
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =420
        Y: =LblMonthSelected1.Y + LblMonthSelected1.Height + 10
        ZIndex: =10

        Title1 As label:
            Align: =Align.Center
            Height: =WeekdayGallery1.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery1.TemplateWidth / 77
            Text: =ThisItem.Value
            Width: =WeekdayGallery1.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    MonthDayGallery1 As gallery.MonthDayGallery:
        AccessibleLabel: ="Days of selected month"
        Height: =425
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =420
        WrapCount: =7
        Y: =WeekdayGallery1.Y + WeekdayGallery1.Height
        ZIndex: =11

        Circle1 As circle:
            Height: =Self.Width
            OnSelect: =Select(Parent)
            Visible: |-
                =/*Visible if calendar events are found on this day*/               
                CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))) > 0 && !Subcircle1.Visible && Title2.Visible
            Width: =6.5
            X: =MonthDayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery1.TemplateHeight * (0.75)
            ZIndex: =1

        Subcircle1 As circle:
            Height: =3 * Title2.Size
            OnSelect: =Select(Parent)
            Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title2.Visible)
            Width: =Self.Height
            X: =MonthDayGallery1.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        Title2 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: |
                =If(DateAdd(_firstDayInView, ThisItem.Value) > Today(),ColorFade( RGBA(80,80,80,80),80%),RGBA(80,80,80,80))
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            Height: =MonthDayGallery1.TemplateHeight
            OnSelect: |+
                =If(DateAdd(_firstDayInView, ThisItem.Value)>=Today(),
                Set(_dateSelected,DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)));
                
            Size: =17 * MonthDayGallery1.TemplateWidth / 91
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
            Width: =MonthDayGallery1.TemplateWidth
            Wrap: =false
            ZIndex: =3

    LblDateSelected1 As label:
        Height: =RectMeetingBkg1.Height
        Size: =13
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width / 3 - 60
        Wrap: =false
        X: =451
        Y: =RectQuickActionBar1.Height
        ZIndex: =12

    RectCalendarSeparator1 As rectangle:
        Height: =Parent.Height - Self.Y
        Width: =2
        X: =420
        Y: =RectQuickActionBar1.Height
        ZIndex: =16

    Button4 As button:
        Fill: =RGBA(246, 88, 16, 1)
        OnSelect: =Navigate('Main Screen',ScreenTransition.CoverRight)
        Text: ="Book"
        X: =1159
        Y: =12
        ZIndex: =17

    Label14 As label:
        Text: ="Start Time"
        X: =507
        Y: =88
        ZIndex: =18

    Label15 As label:
        Text: ="End Time"
        X: =981
        Y: =90
        ZIndex: =19

    DataCardValue4_2 As dropdown:
        BorderColor: =RGBA(9, 33, 98, 1)
        Items: |
            =
            ["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"]
        X: =451
        Y: =148
        ZIndex: =20

    DataCardValue5_2 As dropdown:
        BorderColor: =RGBA(9, 33, 98, 1)
        Items: |+
            =["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"]
            
        X: =892
        Y: =148
        ZIndex: =21

    Button8 As button:
        OnSelect: |
            =//ClearCollect(AllRoom,Bookings);
            //Set(AllRoomsAddress,Concat(AllRoom,SelectedRoom & ","));
            
            Gallery9.Visible = true;
        Text: ="Find Rooms"
        X: =739
        Y: =245
        ZIndex: =22

    Gallery9 As gallery.galleryVertical:
        DelayItemLoading: =true
        Height: =250
        Items: =CustomGallerySample
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        TemplateSize: =245
        Visible: =false
        Width: =889
        X: =437
        Y: =331
        ZIndex: =23

        Button15 As button:
            Height: =102
            OnSelect: =Select(Parent)
            Text: ="Button"
            ZIndex: =1

        Button17 As button:
            Height: =102
            OnSelect: =Select(Parent)
            Text: ="Button"
            X: =306
            ZIndex: =2

