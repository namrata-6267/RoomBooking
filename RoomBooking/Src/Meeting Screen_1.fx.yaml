"'Meeting Screen_1' As screen.'tabletLayout_Calendar_ver3.0'":
    OnVisible: =

    RectMeetingBkg1_2 As rectangle:
        Height: =42
        Visible: =_calendarVisible
        Width: =Parent.Width - Self.X
        X: =422
        Y: =RectQuickActionBar1_2.Height
        ZIndex: =1

    RectQuickActionBar1_2 As rectangle:
        Height: =64
        Width: =Parent.Width
        ZIndex: =2

    LblAppName1_2 As label:
        Height: =64
        PaddingLeft: =0
        Text: ="My Bookings"
        Width: =Parent.Width - Self.X * 2
        Wrap: =false
        X: =94
        Y: =90
        ZIndex: =3

    LblResetToday1_2 As label:
        Align: =Align.Center
        Color: =iconCalendar1_2.Color
        FontWeight: =FontWeight.Bold
        Height: =iconCalendar1_2.Height
        PaddingTop: =12
        Size: =11
        Text: =DateDiff(Date(Year(Today()), Month(Today()), 1), Today(), TimeUnit.Days) + 1
        Width: =iconCalendar1_2.Width
        X: =iconCalendar1_2.X
        Y: =iconCalendar1_2.Y
        ZIndex: =4

    iconCalendar1_2 As icon.CalendarBlank:
        Height: =40
        Icon: =Icon.CalendarBlank
        OnSelect: |-
            =/*resets calendar view and date selection to today*/
            Set(_dateSelected, Today());
            Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))
        TabIndex: =0
        Tooltip: ="Reset selected date to today"
        Width: =40
        X: =395 - Self.Width
        Y: =dropdownCalendarSelection1_2.Y
        ZIndex: =5

    dropdownCalendarSelection1_2 As dropdown:
        ChevronBackground: =RGBA(109, 49, 162, 1)
        Default: =_myCalendar.DisplayName
        Items: =Office365Outlook.CalendarGetTables().value
        OnChange: =Select(dropdownCalendarSelection1_2)
        OnSelect: |-
            =/*retrieves calendar events for all days in current month view and selected calendar 
            _minDate and _maxDate act as markers to prevent duplicate data collection*/         
            If(IsBlank(_userDomain),         
            	UpdateContext({_showLoading: true});         
            	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
            	Set(_dateSelected, Today());         
            	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
            	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))         
            );         
            Set(_calendarVisible, false);         
            UpdateContext({_showLoading: true});         
            Set(_myCalendar, Self.Selected);         
            Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days), 40, TimeUnit.Days));         
            ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value);         
            UpdateContext({_showLoading: false});         
            Set(_calendarVisible, true)
        Tooltip: ="Select a calendar"
        Width: =307
        X: =32
        Y: =RectQuickActionBar1_2.Height + 24
        ZIndex: =6

    LblMonthSelected1_2 As label:
        Align: =Align.Center
        Height: =50
        Size: =18
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =419
        Wrap: =false
        Y: =dropdownCalendarSelection1_2.Y + dropdownCalendarSelection1_2.Height + 40
        ZIndex: =7

    iconPrevMonth1_2 As icon.ChevronLeft:
        Height: =50
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =/*changes month view to previous month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
            If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_lastDayOfMonth, DateTimeFormat.UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="View previous month"
        Visible: =_calendarVisible
        Width: =59
        Y: =LblMonthSelected1_2.Y
        ZIndex: =8

    iconNextMonth1_2 As icon.ChevronRight:
        Height: =50
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="View next month"
        Visible: =_calendarVisible
        Width: =59
        X: =419 - Self.Width
        Y: =LblMonthSelected1_2.Y
        ZIndex: =9

    WeekdayGallery1_2 As gallery.WeekdayGallery:
        AccessibleLabel: ="Days of the week"
        Height: =45
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =420
        Y: =LblMonthSelected1_2.Y + LblMonthSelected1_2.Height + 10
        ZIndex: =10

        Title1_2 As label:
            Align: =Align.Center
            Height: =WeekdayGallery1_2.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery1_2.TemplateWidth / 77
            Text: =ThisItem.Value
            Width: =WeekdayGallery1_2.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery1_2.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery1_2.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    MonthDayGallery1_2 As gallery.MonthDayGallery:
        AccessibleLabel: ="Days of selected month"
        Height: =425
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =419
        WrapCount: =7
        Y: =WeekdayGallery1_2.Y + WeekdayGallery1_2.Height
        ZIndex: =11

        Circle1_2 As circle:
            Height: =Self.Width
            OnSelect: =Select(Parent)
            Visible: |-
                =/*Visible if calendar events are found on this day*/               
                CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))) > 0 && !Subcircle1_2.Visible && Title2_2.Visible
            Width: =6.5
            X: =MonthDayGallery1_2.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery1_2.TemplateHeight * (0.75)
            ZIndex: =1

        Subcircle1_2 As circle:
            Height: =3 * Title2_2.Size
            OnSelect: =Select(Parent)
            Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title2_2.Visible)
            Width: =Self.Height
            X: =MonthDayGallery1_2.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery1_2.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        Title2_2 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: |
                =If(DateAdd(_firstDayInView, ThisItem.Value) > Today(),ColorFade( RGBA(80,80,80,80),80%),RGBA(80,80,80,80))
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1_2.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            Height: =MonthDayGallery1_2.TemplateHeight
            OnSelect: |+
                =If(DateAdd(_firstDayInView, ThisItem.Value)>=Today(),
                Set(_dateSelected,DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)));
                
            Size: =17 * MonthDayGallery1_2.TemplateWidth / 91
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
            Width: =MonthDayGallery1_2.TemplateWidth
            Wrap: =false
            ZIndex: =3

    LblDateSelected1_2 As label:
        Height: =RectMeetingBkg1_2.Height
        Size: =13
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width / 3 - 60
        Wrap: =false
        X: =451
        Y: =RectQuickActionBar1_2.Height
        ZIndex: =12

    RectCalendarSeparator1_2 As rectangle:
        Height: =Parent.Height - Self.Y
        Width: =2
        X: =420
        Y: =RectQuickActionBar1_2.Height
        ZIndex: =16

    Label14_7 As label:
        Text: ="Start Time"
        X: =507
        Y: =88
        ZIndex: =18

    Label15_3 As label:
        Text: ="End Time"
        X: =981
        Y: =90
        ZIndex: =19

    Button8_2 As button:
        Fill: =RGBA(109, 49, 162, 1)
        Height: =45
        OnSelect: |-
            =Set(FindRoom, true);
            Set(StartDateTime, DateAdd(_dateSelected, ddStartTime_2.Selected.Minutes, TimeUnit.Minutes));
            Set(EndDateTime, DateAdd(_dateSelected, ddEndTime_2.Selected.Minutes, TimeUnit.Minutes));
            Set(StartDateTimeUTC, Text(DateAdd(StartDateTime, TimeZoneOffset(), TimeUnit.Minutes), "[$-en-GB]yyyy-mm-ddThh:mm") & ":00.000z");
            Set(EndDateTimeUTC, Text(DateAdd(EndDateTime, TimeZoneOffset(), TimeUnit.Minutes), "[$-en-GB]yyyy-mm-ddThh:mm") & ":00.000z");
            
            Set(AllRoomsAddress, Concat(AllRooms, address & ";"));
            
            ClearCollect(AvailableRoomsEmails, ForAll(_AttendeeAvailablity, attendee.emailAddress.address));
            ClearCollect(
            RoomDataSource,
            
            Filter(
            EmployeesData,
            !(
            StartDateTime >= TimeValue(LookUp(Bookings, SelectedRoom = Title).'Start Time', "hh:mm")
            &&
            EndDateTime <= TimeValue(LookUp(Bookings, SelectedRoom = Title).'End Time', "hh:mm")
            )
            
            ))
        Text: ="Find Rooms"
        X: =676
        Y: =219
        ZIndex: =22

    ddStartTime_2 As dropdown:
        ChevronBackground: =RGBA(109, 49, 162, 1)
        Items: =TimeDD
        OnChange: |-
            =//false
            Set(varStartTime,ddStartTime_2.Selected);
        OnSelect: |-
            =//false
            Set(varStartTime,ddStartTime_2.Selected);
        Reset: |-
            =//false
            true
        X: =458
        Y: =147
        ZIndex: =24

    ddEndTime_2 As dropdown:
        ChevronBackground: =RGBA(109, 49, 162, 1)
        Items: =TimeDD
        OnChange: |-
            =//false
            Set(varEndTime,ddEndTime_2.Selected);
        OnSelect: |-
            =//false
            
            Set(varEndTime,ddEndTime_2.Selected);
        Reset: |-
            =//false
            true
        X: =914
        Y: =147
        ZIndex: =25

    Header_11 As Header:
        Height: =64
        ZIndex: =27

    Icon8_1 As icon.BackArrow:
        Height: =31
        Icon: =Icon.BackArrow
        OnSelect: =Back()
        Width: =32
        ZIndex: =28

    RoomGallery_1 As gallery.galleryHorizontal:
        DelayItemLoading: =true
        Height: =451
        Items: =RoomDataSource
        LoadingSpinner: =LoadingSpinner.Data
        ShowScrollbar: =false
        TemplateSize: =312
        Visible: |-
            =//true
            FindRoom
        Width: =915
        WrapCount: =2
        X: =451
        Y: =317
        ZIndex: =29

        Button27_4 As button:
            Height: =178
            OnSelect: =Select(Parent)
            Text: =""
            Width: =235
            X: =40
            Y: =40
            ZIndex: =1

        Label16_5 As label:
            DisabledBorderColor: =RGBA(255, 255, 255, 1)
            Height: =62
            OnSelect: =Select(Parent)
            Text: =""
            Width: =197
            X: =40
            Y: =60
            ZIndex: =2

        Label18_5 As label:
            Color: =RGBA(255, 255, 255, 1)
            OnSelect: =Select(Parent)
            Text: =ThisItem.Name
            X: =107
            Y: =82
            ZIndex: =3

        Button14_4 As button:
            Fill: =RGBA(168, 0, 0, 1)
            OnSelect: |-
                =//Select(Parent)
                
                
                Navigate('New Request')
            Text: ="Book"
            X: =70
            Y: =154
            ZIndex: =4

